<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring2.mapper.BoardMapper">
	<insert id="write">
		<selectKey keyProperty="pno" order="BEFORE" resultType="int">
			select
			ifnull (max(pno)+1 , 1)
			from product
		</selectKey>
		insert into
		product(pno,pname,price,content,quantity,delivery,quality,category_area,category_type)
		values(#{pno},#{pname},#{price},#{content},#{quantity},#{delivery},#{quality},#{category_area},#{category_type})
	</insert>

	<select id="list" resultType="org.spring2.model.BoardVO">
		select *
		from (
		select @rownum:=@rownum+1 rownum, p.*
		from product p,
		(select @rownum:=0) as tmp

		<choose>
			<when
				test="search != ''.toString() and category_area == 0 and category_type == 0">
				where (pname like concat('%',#{search},'%')
				or content like
				concat('%',#{search},'%'))
				and category_area != 100
			</when>
			<when
				test="search == ''.toString() and category_area != 0 and category_type ==0">
				where category_area = #{category_area}
				and category_area != 100
			</when>
			<when
				test="search == ''.toString() and category_area == 0 and category_type !=0">
				where category_type = #{category_type}
				and category_area != 100
			</when>
			<when
				test="search != ''.toString() and category_area != 0 and category_type ==0">
				where (pname like concat('%',#{search},'%')
				or content like
				concat('%',#{search},'%'))
				and category_area = #{category_area}
				and category_area != 100
			</when>
			<when
				test="search == ''.toString() and category_area != 0 and category_type !=0">
				where category_area = #{category_area}
				and category_type = #{category_type}
				and category_area != 100
			</when>
			<when
				test="search != ''.toString() and category_area == 0 and category_type !=0">
				where (pname like concat('%',#{search},'%')
				or content like
				concat('%',#{search},'%'))
				and category_type = #{category_type}
				and category_area != 100
			</when>
			<when
				test="search != ''.toString() and category_area != 0 and category_type != 0">
				where (pname like concat('%',#{search},'%')
				or content like
				concat('%',#{search},'%'))
				and category_area = #{category_area}
				and category_type = #{category_type}
				and category_area != 100
			</when>
			<otherwise>
				where s_quantity != -1 and category_area != 100
			</otherwise>
		</choose>
		<if test="type =='except'">
			and p.quantity != 0 and category_area != 100
		</if>
		<choose>
			<when test="array =='lowprice'">
				order by price
			</when>
			<when test="array =='highprice'">
				order by price desc
			</when>
			<when test="array == 'popular'">
				order by wishNum desc
			</when>
			<when test="array == 'sell'">
				order by s_quantity desc
			</when>
			<otherwise>
				order by pno desc
			</otherwise>
		</choose>
		)as boardlist
		<![CDATA[
		where rownum>(#{pageNum}-1)*#{amount} and rownum <=#{pageNum}*#{amount}
		]]>
	</select>

	<select id="detail" resultType="org.spring2.model.BoardVO">
		select*
		from product
		where
		pno=#{pno}
	</select>
	<select id="findPay" resultType="org.spring2.model.OrderVO">
		select*
		from orderP
		where pno = #{pno}
	</select>
	<update id="modify">
		update product
		set pname = #{pname}, price = #{price},
		content = #{content}, quantity = #{quantity},
		delivery=#{delivery},
		quality=#{quality}, category_area = #{category_area},
		category_type=#{category_type}
		where pno = #{pno};
	</update>

	<delete id="remove">
		delete from product
		where pno=#{pno};
	</delete>

	<select id="total" resultType="int">
		select count(*)
		from product
		<choose>
			<when
				test="search != ''.toString() and category_area == 0 and category_type == 0">
				where pname like concat('%',#{search},'%')
				or content like
				concat('%',#{search},'%')
			</when>
			<when
				test="search == ''.toString() and category_area != 0 and category_type ==0">
				where category_area = #{category_area}
			</when>
			<when
				test="search == ''.toString() and category_area == 0 and category_type !=0">
				where category_type = #{category_type}
			</when>
			<when
				test="search != ''.toString() and category_area != 0 and category_type ==0">
				where (pname like concat('%',#{search},'%')
				or content like
				concat('%',#{search},'%'))
				and category_area = #{category_area}
			</when>
			<when
				test="search == ''.toString() and category_area != 0 and category_type !=0">
				where category_area = #{category_area}
				and category_type = #{category_type}
			</when>
			<when
				test="search != ''.toString() and category_area == 0 and category_type !=0">
				where (pname like concat('%',#{search},'%')
				or content like
				concat('%',#{search},'%'))
				and category_type = #{category_type}
			</when>
			<when
				test="search != ''.toString() and category_area != 0 and category_type != 0">
				where (pname like concat('%',#{search},'%')
				or content like
				concat('%',#{search},'%'))
				and category_area = #{category_area}
				and category_type = #{category_type}
			</when>
			<otherwise>
				where s_quantity != -1
			</otherwise>
		</choose>
		<if test="type =='except'">
			and quantity != 0
		</if>
	</select>
	<select id="category" resultType="org.spring2.model.CategoryVO">
		select *
		from category_type;
	</select>
	<select id="caa" resultType="org.spring2.model.Category_AreaVO">
		select *
		from category_area
		where cno
		= #{category_area}
	</select>
	<update id="wishNumUpdate">
		update 	product 
		set
		<choose>
			<when test="refund == 'd'.toString()">
				wishNum = wishNum + 1
			</when>
			<otherwise>
				wishNum = wishNum - 1
			</otherwise>
		</choose>
		where pno = #{pno}
	</update>
</mapper>